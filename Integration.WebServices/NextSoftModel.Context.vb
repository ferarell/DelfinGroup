'------------------------------------------------------------------------------
' <auto-generated>
'     Este código se generó a partir de una plantilla.
'
'     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
'     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
' </auto-generated>
'------------------------------------------------------------------------------

Imports System
Imports System.Data.Entity
Imports System.Data.Entity.Infrastructure
Imports System.Data.Entity.Core.Objects
Imports System.Linq

Namespace IntegrationServicesRest

    Partial Public Class NextSoftEntities
        Inherits DbContext
    
        Public Sub New()
            MyBase.New("name=NextSoftEntities")
        End Sub
    
        Protected Overrides Sub OnModelCreating(modelBuilder As DbModelBuilder)
            Throw New UnintentionalCodeFirstException()
        End Sub
    
    
        Public Overridable Function paInsertaCotizacion(idCRM As String, cliente As String, transportista As String, fechaCierre As Nullable(Of Date), servicioLogistico As Nullable(Of Boolean), observaciones As String, regimen As String, via As String, puertoDestino As String, puertoOrigen As String, moneda As String, usuario As String) As ObjectResult(Of paInsertaCotizacion_Result)
            Dim idCRMParameter As ObjectParameter = If(idCRM IsNot Nothing, New ObjectParameter("IdCRM", idCRM), New ObjectParameter("IdCRM", GetType(String)))
    
            Dim clienteParameter As ObjectParameter = If(cliente IsNot Nothing, New ObjectParameter("Cliente", cliente), New ObjectParameter("Cliente", GetType(String)))
    
            Dim transportistaParameter As ObjectParameter = If(transportista IsNot Nothing, New ObjectParameter("Transportista", transportista), New ObjectParameter("Transportista", GetType(String)))
    
            Dim fechaCierreParameter As ObjectParameter = If(fechaCierre.HasValue, New ObjectParameter("FechaCierre", fechaCierre), New ObjectParameter("FechaCierre", GetType(Date)))
    
            Dim servicioLogisticoParameter As ObjectParameter = If(servicioLogistico.HasValue, New ObjectParameter("ServicioLogistico", servicioLogistico), New ObjectParameter("ServicioLogistico", GetType(Boolean)))
    
            Dim observacionesParameter As ObjectParameter = If(observaciones IsNot Nothing, New ObjectParameter("Observaciones", observaciones), New ObjectParameter("Observaciones", GetType(String)))
    
            Dim regimenParameter As ObjectParameter = If(regimen IsNot Nothing, New ObjectParameter("Regimen", regimen), New ObjectParameter("Regimen", GetType(String)))
    
            Dim viaParameter As ObjectParameter = If(via IsNot Nothing, New ObjectParameter("Via", via), New ObjectParameter("Via", GetType(String)))
    
            Dim puertoDestinoParameter As ObjectParameter = If(puertoDestino IsNot Nothing, New ObjectParameter("PuertoDestino", puertoDestino), New ObjectParameter("PuertoDestino", GetType(String)))
    
            Dim puertoOrigenParameter As ObjectParameter = If(puertoOrigen IsNot Nothing, New ObjectParameter("PuertoOrigen", puertoOrigen), New ObjectParameter("PuertoOrigen", GetType(String)))
    
            Dim monedaParameter As ObjectParameter = If(moneda IsNot Nothing, New ObjectParameter("Moneda", moneda), New ObjectParameter("Moneda", GetType(String)))
    
            Dim usuarioParameter As ObjectParameter = If(usuario IsNot Nothing, New ObjectParameter("Usuario", usuario), New ObjectParameter("Usuario", GetType(String)))
    
            Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of paInsertaCotizacion_Result)("paInsertaCotizacion", idCRMParameter, clienteParameter, transportistaParameter, fechaCierreParameter, servicioLogisticoParameter, observacionesParameter, regimenParameter, viaParameter, puertoDestinoParameter, puertoOrigenParameter, monedaParameter, usuarioParameter)
        End Function
    
        Public Overridable Function upUpdateSynchronizedDocumentNumber(cCCT_Codigo As Nullable(Of Integer), docEntry As Nullable(Of Integer), docNum As String, eventLog As String) As Integer
            Dim cCCT_CodigoParameter As ObjectParameter = If(cCCT_Codigo.HasValue, New ObjectParameter("CCCT_Codigo", cCCT_Codigo), New ObjectParameter("CCCT_Codigo", GetType(Integer)))
    
            Dim docEntryParameter As ObjectParameter = If(docEntry.HasValue, New ObjectParameter("DocEntry", docEntry), New ObjectParameter("DocEntry", GetType(Integer)))
    
            Dim docNumParameter As ObjectParameter = If(docNum IsNot Nothing, New ObjectParameter("DocNum", docNum), New ObjectParameter("DocNum", GetType(String)))
    
            Dim eventLogParameter As ObjectParameter = If(eventLog IsNot Nothing, New ObjectParameter("EventLog", eventLog), New ObjectParameter("EventLog", GetType(String)))
    
            Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("upUpdateSynchronizedDocumentNumber", cCCT_CodigoParameter, docEntryParameter, docNumParameter, eventLogParameter)
        End Function
    
    End Class

End Namespace
