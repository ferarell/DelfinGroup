//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Delfin.Principal.OnLineService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EntidadDireccionamiento_BE", Namespace="http://schemas.datacontract.org/2004/07/Application.BusinessEntities")]
    [System.SerializableAttribute()]
    public partial class EntidadDireccionamiento_BE : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime AUDI_FecCreaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> AUDI_FecModField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AUDI_UsrCreaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AUDI_UsrModField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodigoRespuestaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DOOV_HBLField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DescargaDirectaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescripcionEstadoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescripcionRespuestaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ENDI_EstadoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ENDI_NumeroField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ENTC_CodDepTemporalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ENTC_CodDepTemporalSolicitadoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ENTC_CodigoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ENTC_EMailSolicitanteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EsAnulableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> FechaMaxDireccionamientoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NombreClienteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NombreDepositoTemporalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NombreDepositoTemporalAsignadoField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime AUDI_FecCrea {
            get {
                return this.AUDI_FecCreaField;
            }
            set {
                if ((this.AUDI_FecCreaField.Equals(value) != true)) {
                    this.AUDI_FecCreaField = value;
                    this.RaisePropertyChanged("AUDI_FecCrea");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> AUDI_FecMod {
            get {
                return this.AUDI_FecModField;
            }
            set {
                if ((this.AUDI_FecModField.Equals(value) != true)) {
                    this.AUDI_FecModField = value;
                    this.RaisePropertyChanged("AUDI_FecMod");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AUDI_UsrCrea {
            get {
                return this.AUDI_UsrCreaField;
            }
            set {
                if ((object.ReferenceEquals(this.AUDI_UsrCreaField, value) != true)) {
                    this.AUDI_UsrCreaField = value;
                    this.RaisePropertyChanged("AUDI_UsrCrea");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AUDI_UsrMod {
            get {
                return this.AUDI_UsrModField;
            }
            set {
                if ((object.ReferenceEquals(this.AUDI_UsrModField, value) != true)) {
                    this.AUDI_UsrModField = value;
                    this.RaisePropertyChanged("AUDI_UsrMod");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CodigoRespuesta {
            get {
                return this.CodigoRespuestaField;
            }
            set {
                if ((object.ReferenceEquals(this.CodigoRespuestaField, value) != true)) {
                    this.CodigoRespuestaField = value;
                    this.RaisePropertyChanged("CodigoRespuesta");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DOOV_HBL {
            get {
                return this.DOOV_HBLField;
            }
            set {
                if ((object.ReferenceEquals(this.DOOV_HBLField, value) != true)) {
                    this.DOOV_HBLField = value;
                    this.RaisePropertyChanged("DOOV_HBL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DescargaDirecta {
            get {
                return this.DescargaDirectaField;
            }
            set {
                if ((this.DescargaDirectaField.Equals(value) != true)) {
                    this.DescargaDirectaField = value;
                    this.RaisePropertyChanged("DescargaDirecta");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DescripcionEstado {
            get {
                return this.DescripcionEstadoField;
            }
            set {
                if ((object.ReferenceEquals(this.DescripcionEstadoField, value) != true)) {
                    this.DescripcionEstadoField = value;
                    this.RaisePropertyChanged("DescripcionEstado");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DescripcionRespuesta {
            get {
                return this.DescripcionRespuestaField;
            }
            set {
                if ((object.ReferenceEquals(this.DescripcionRespuestaField, value) != true)) {
                    this.DescripcionRespuestaField = value;
                    this.RaisePropertyChanged("DescripcionRespuesta");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ENDI_Estado {
            get {
                return this.ENDI_EstadoField;
            }
            set {
                if ((object.ReferenceEquals(this.ENDI_EstadoField, value) != true)) {
                    this.ENDI_EstadoField = value;
                    this.RaisePropertyChanged("ENDI_Estado");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ENDI_Numero {
            get {
                return this.ENDI_NumeroField;
            }
            set {
                if ((this.ENDI_NumeroField.Equals(value) != true)) {
                    this.ENDI_NumeroField = value;
                    this.RaisePropertyChanged("ENDI_Numero");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ENTC_CodDepTemporal {
            get {
                return this.ENTC_CodDepTemporalField;
            }
            set {
                if ((this.ENTC_CodDepTemporalField.Equals(value) != true)) {
                    this.ENTC_CodDepTemporalField = value;
                    this.RaisePropertyChanged("ENTC_CodDepTemporal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ENTC_CodDepTemporalSolicitado {
            get {
                return this.ENTC_CodDepTemporalSolicitadoField;
            }
            set {
                if ((this.ENTC_CodDepTemporalSolicitadoField.Equals(value) != true)) {
                    this.ENTC_CodDepTemporalSolicitadoField = value;
                    this.RaisePropertyChanged("ENTC_CodDepTemporalSolicitado");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ENTC_Codigo {
            get {
                return this.ENTC_CodigoField;
            }
            set {
                if ((this.ENTC_CodigoField.Equals(value) != true)) {
                    this.ENTC_CodigoField = value;
                    this.RaisePropertyChanged("ENTC_Codigo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ENTC_EMailSolicitante {
            get {
                return this.ENTC_EMailSolicitanteField;
            }
            set {
                if ((object.ReferenceEquals(this.ENTC_EMailSolicitanteField, value) != true)) {
                    this.ENTC_EMailSolicitanteField = value;
                    this.RaisePropertyChanged("ENTC_EMailSolicitante");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EsAnulable {
            get {
                return this.EsAnulableField;
            }
            set {
                if ((this.EsAnulableField.Equals(value) != true)) {
                    this.EsAnulableField = value;
                    this.RaisePropertyChanged("EsAnulable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> FechaMaxDireccionamiento {
            get {
                return this.FechaMaxDireccionamientoField;
            }
            set {
                if ((this.FechaMaxDireccionamientoField.Equals(value) != true)) {
                    this.FechaMaxDireccionamientoField = value;
                    this.RaisePropertyChanged("FechaMaxDireccionamiento");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NombreCliente {
            get {
                return this.NombreClienteField;
            }
            set {
                if ((object.ReferenceEquals(this.NombreClienteField, value) != true)) {
                    this.NombreClienteField = value;
                    this.RaisePropertyChanged("NombreCliente");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NombreDepositoTemporal {
            get {
                return this.NombreDepositoTemporalField;
            }
            set {
                if ((object.ReferenceEquals(this.NombreDepositoTemporalField, value) != true)) {
                    this.NombreDepositoTemporalField = value;
                    this.RaisePropertyChanged("NombreDepositoTemporal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NombreDepositoTemporalAsignado {
            get {
                return this.NombreDepositoTemporalAsignadoField;
            }
            set {
                if ((object.ReferenceEquals(this.NombreDepositoTemporalAsignadoField, value) != true)) {
                    this.NombreDepositoTemporalAsignadoField = value;
                    this.RaisePropertyChanged("NombreDepositoTemporalAsignado");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="OnLineService.IOnLineService")]
    public interface IOnLineService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOnLineService/GetData", ReplyAction="http://tempuri.org/IOnLineService/GetDataResponse")]
        string GetData(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOnLineService/GetData", ReplyAction="http://tempuri.org/IOnLineService/GetDataResponse")]
        System.Threading.Tasks.Task<string> GetDataAsync(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOnLineService/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IOnLineService/GetDataUsingDataContractResponse")]
        ApplicationForm.OnLineService.CompositeType GetDataUsingDataContract(ApplicationForm.OnLineService.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOnLineService/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IOnLineService/GetDataUsingDataContractResponse")]
        System.Threading.Tasks.Task<ApplicationForm.OnLineService.CompositeType> GetDataUsingDataContractAsync(ApplicationForm.OnLineService.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOnLineService/ExecuteSQL", ReplyAction="http://tempuri.org/IOnLineService/ExecuteSQLResponse")]
        System.Data.DataSet ExecuteSQL(string QueryString);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOnLineService/ExecuteSQL", ReplyAction="http://tempuri.org/IOnLineService/ExecuteSQLResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> ExecuteSQLAsync(string QueryString);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOnLineService/ExecuteSQLNonQuery", ReplyAction="http://tempuri.org/IOnLineService/ExecuteSQLNonQueryResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ApplicationForm.OnLineService.EntidadVinculada_BE))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ApplicationForm.OnLineService.EntidadRegistro_BE))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Delfin.Principal.OnLineService.EntidadDireccionamiento_BE))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Delfin.Principal.OnLineService.EntidadDireccionamiento_BE[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ApplicationForm.OnLineService.CompositeType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ApplicationForm.OnLineService.VoyageQueryDTO[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ApplicationForm.OnLineService.VoyageQueryDTO))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        object[] ExecuteSQLNonQuery(string QueryString);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOnLineService/ExecuteSQLNonQuery", ReplyAction="http://tempuri.org/IOnLineService/ExecuteSQLNonQueryResponse")]
        System.Threading.Tasks.Task<object[]> ExecuteSQLNonQueryAsync(string QueryString);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOnLineService/VoyageQuery", ReplyAction="http://tempuri.org/IOnLineService/VoyageQueryResponse")]
        System.Data.DataTable VoyageQuery(int Days);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOnLineService/VoyageQuery", ReplyAction="http://tempuri.org/IOnLineService/VoyageQueryResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> VoyageQueryAsync(int Days);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOnLineService/VoyageQueryList", ReplyAction="http://tempuri.org/IOnLineService/VoyageQueryListResponse")]
        ApplicationForm.OnLineService.VoyageQueryDTO[] VoyageQueryList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOnLineService/VoyageQueryList", ReplyAction="http://tempuri.org/IOnLineService/VoyageQueryListResponse")]
        System.Threading.Tasks.Task<ApplicationForm.OnLineService.VoyageQueryDTO[]> VoyageQueryListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOnLineService/InvoicingQuery", ReplyAction="http://tempuri.org/IOnLineService/InvoicingQueryResponse")]
        System.Data.DataTable InvoicingQuery(int CustomerCode, System.DateTime DateFrom, System.DateTime DateTo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOnLineService/InvoicingQuery", ReplyAction="http://tempuri.org/IOnLineService/InvoicingQueryResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> InvoicingQueryAsync(int CustomerCode, System.DateTime DateFrom, System.DateTime DateTo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOnLineService/CargoNoticeQuery", ReplyAction="http://tempuri.org/IOnLineService/CargoNoticeQueryResponse")]
        System.Data.DataSet CargoNoticeQuery(string HouseBL);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOnLineService/CargoNoticeQuery", ReplyAction="http://tempuri.org/IOnLineService/CargoNoticeQueryResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> CargoNoticeQueryAsync(string HouseBL);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOnLineService/GetVoyageByCustomer", ReplyAction="http://tempuri.org/IOnLineService/GetVoyageByCustomerResponse")]
        System.Data.DataTable GetVoyageByCustomer(int CustomerCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOnLineService/GetVoyageByCustomer", ReplyAction="http://tempuri.org/IOnLineService/GetVoyageByCustomerResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetVoyageByCustomerAsync(int CustomerCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOnLineService/CargoAddressingQuery", ReplyAction="http://tempuri.org/IOnLineService/CargoAddressingQueryResponse")]
        System.Data.DataTable CargoAddressingQuery(int CustomerCode, int Voyage, string HouseBL);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOnLineService/CargoAddressingQuery", ReplyAction="http://tempuri.org/IOnLineService/CargoAddressingQueryResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> CargoAddressingQueryAsync(int CustomerCode, int Voyage, string HouseBL);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOnLineService/CustomerDocumentQuery", ReplyAction="http://tempuri.org/IOnLineService/CustomerDocumentQueryResponse")]
        System.Data.DataTable CustomerDocumentQuery(string DocumentType, string DocumentNUmber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOnLineService/CustomerDocumentQuery", ReplyAction="http://tempuri.org/IOnLineService/CustomerDocumentQueryResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> CustomerDocumentQueryAsync(string DocumentType, string DocumentNUmber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOnLineService/CustomerDebtQuery", ReplyAction="http://tempuri.org/IOnLineService/CustomerDebtQueryResponse")]
        System.Data.DataTable CustomerDebtQuery(int CustomerCode, string HouseBL);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOnLineService/CustomerDebtQuery", ReplyAction="http://tempuri.org/IOnLineService/CustomerDebtQueryResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> CustomerDebtQueryAsync(int CustomerCode, string HouseBL);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOnLineService/HBLStatusQuery", ReplyAction="http://tempuri.org/IOnLineService/HBLStatusQueryResponse")]
        System.Data.DataTable HBLStatusQuery(string HouseBL, int CustomerCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOnLineService/HBLStatusQuery", ReplyAction="http://tempuri.org/IOnLineService/HBLStatusQueryResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> HBLStatusQueryAsync(string HouseBL, int CustomerCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOnLineService/RelatedCompanyQuery", ReplyAction="http://tempuri.org/IOnLineService/RelatedCompanyQueryResponse")]
        System.Data.DataTable RelatedCompanyQuery(int CompanyCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOnLineService/RelatedCompanyQuery", ReplyAction="http://tempuri.org/IOnLineService/RelatedCompanyQueryResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> RelatedCompanyQueryAsync(int CompanyCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOnLineService/InsertRelatedCompany", ReplyAction="http://tempuri.org/IOnLineService/InsertRelatedCompanyResponse")]
        void InsertRelatedCompany(ApplicationForm.OnLineService.EntidadVinculada_BE oRelatedCompany);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOnLineService/InsertRelatedCompany", ReplyAction="http://tempuri.org/IOnLineService/InsertRelatedCompanyResponse")]
        System.Threading.Tasks.Task InsertRelatedCompanyAsync(ApplicationForm.OnLineService.EntidadVinculada_BE oRelatedCompany);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOnLineService/UpdateRelatedCompany", ReplyAction="http://tempuri.org/IOnLineService/UpdateRelatedCompanyResponse")]
        void UpdateRelatedCompany(ApplicationForm.OnLineService.EntidadVinculada_BE oRelatedCompany);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOnLineService/UpdateRelatedCompany", ReplyAction="http://tempuri.org/IOnLineService/UpdateRelatedCompanyResponse")]
        System.Threading.Tasks.Task UpdateRelatedCompanyAsync(ApplicationForm.OnLineService.EntidadVinculada_BE oRelatedCompany);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOnLineService/StatusUpdateRelatedCompany", ReplyAction="http://tempuri.org/IOnLineService/StatusUpdateRelatedCompanyResponse")]
        void StatusUpdateRelatedCompany(ApplicationForm.OnLineService.EntidadVinculada_BE oRelatedCompany);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOnLineService/StatusUpdateRelatedCompany", ReplyAction="http://tempuri.org/IOnLineService/StatusUpdateRelatedCompanyResponse")]
        System.Threading.Tasks.Task StatusUpdateRelatedCompanyAsync(ApplicationForm.OnLineService.EntidadVinculada_BE oRelatedCompany);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOnLineService/DeleteRelatedCompany", ReplyAction="http://tempuri.org/IOnLineService/DeleteRelatedCompanyResponse")]
        void DeleteRelatedCompany(ApplicationForm.OnLineService.EntidadVinculada_BE oRelatedCompany);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOnLineService/DeleteRelatedCompany", ReplyAction="http://tempuri.org/IOnLineService/DeleteRelatedCompanyResponse")]
        System.Threading.Tasks.Task DeleteRelatedCompanyAsync(ApplicationForm.OnLineService.EntidadVinculada_BE oRelatedCompany);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOnLineService/GetAllRelatedCompany", ReplyAction="http://tempuri.org/IOnLineService/GetAllRelatedCompanyResponse")]
        ApplicationForm.OnLineService.EntidadVinculada_BE GetAllRelatedCompany(ApplicationForm.OnLineService.EntidadVinculada_BE oRelatedCompany);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOnLineService/GetAllRelatedCompany", ReplyAction="http://tempuri.org/IOnLineService/GetAllRelatedCompanyResponse")]
        System.Threading.Tasks.Task<ApplicationForm.OnLineService.EntidadVinculada_BE> GetAllRelatedCompanyAsync(ApplicationForm.OnLineService.EntidadVinculada_BE oRelatedCompany);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOnLineService/GetAllDataTableRelatedCompany", ReplyAction="http://tempuri.org/IOnLineService/GetAllDataTableRelatedCompanyResponse")]
        System.Data.DataTable GetAllDataTableRelatedCompany(ApplicationForm.OnLineService.EntidadVinculada_BE oRelatedCompany);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOnLineService/GetAllDataTableRelatedCompany", ReplyAction="http://tempuri.org/IOnLineService/GetAllDataTableRelatedCompanyResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetAllDataTableRelatedCompanyAsync(ApplicationForm.OnLineService.EntidadVinculada_BE oRelatedCompany);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOnLineService/GetDataList", ReplyAction="http://tempuri.org/IOnLineService/GetDataListResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ApplicationForm.OnLineService.EntidadVinculada_BE))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ApplicationForm.OnLineService.EntidadRegistro_BE))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Delfin.Principal.OnLineService.EntidadDireccionamiento_BE))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Delfin.Principal.OnLineService.EntidadDireccionamiento_BE[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ApplicationForm.OnLineService.CompositeType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ApplicationForm.OnLineService.VoyageQueryDTO[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ApplicationForm.OnLineService.VoyageQueryDTO))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        System.Data.DataTable GetDataList(string TableName, object[] Params);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOnLineService/GetDataList", ReplyAction="http://tempuri.org/IOnLineService/GetDataListResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetDataListAsync(string TableName, object[] Params);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOnLineService/GetRelatedCompany", ReplyAction="http://tempuri.org/IOnLineService/GetRelatedCompanyResponse")]
        System.Data.DataTable GetRelatedCompany(string DocumentNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOnLineService/GetRelatedCompany", ReplyAction="http://tempuri.org/IOnLineService/GetRelatedCompanyResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetRelatedCompanyAsync(string DocumentNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOnLineService/GetDataByEntityType", ReplyAction="http://tempuri.org/IOnLineService/GetDataByEntityTypeResponse")]
        System.Data.DataSet GetDataByEntityType(int EntityType, string DocumentNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOnLineService/GetDataByEntityType", ReplyAction="http://tempuri.org/IOnLineService/GetDataByEntityTypeResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetDataByEntityTypeAsync(int EntityType, string DocumentNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOnLineService/InsertCustomerRegister", ReplyAction="http://tempuri.org/IOnLineService/InsertCustomerRegisterResponse")]
        void InsertCustomerRegister(ApplicationForm.OnLineService.EntidadRegistro_BE oCustomerRegister);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOnLineService/InsertCustomerRegister", ReplyAction="http://tempuri.org/IOnLineService/InsertCustomerRegisterResponse")]
        System.Threading.Tasks.Task InsertCustomerRegisterAsync(ApplicationForm.OnLineService.EntidadRegistro_BE oCustomerRegister);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOnLineService/StatusUpdateCustomerRegister", ReplyAction="http://tempuri.org/IOnLineService/StatusUpdateCustomerRegisterResponse")]
        void StatusUpdateCustomerRegister(ApplicationForm.OnLineService.EntidadRegistro_BE oCustomerRegister);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOnLineService/StatusUpdateCustomerRegister", ReplyAction="http://tempuri.org/IOnLineService/StatusUpdateCustomerRegisterResponse")]
        System.Threading.Tasks.Task StatusUpdateCustomerRegisterAsync(ApplicationForm.OnLineService.EntidadRegistro_BE oCustomerRegister);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOnLineService/GetAllDataTableCustomerRegister", ReplyAction="http://tempuri.org/IOnLineService/GetAllDataTableCustomerRegisterResponse")]
        System.Data.DataTable GetAllDataTableCustomerRegister(ApplicationForm.OnLineService.EntidadRegistro_BE oCustomerRegister);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOnLineService/GetAllDataTableCustomerRegister", ReplyAction="http://tempuri.org/IOnLineService/GetAllDataTableCustomerRegisterResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetAllDataTableCustomerRegisterAsync(ApplicationForm.OnLineService.EntidadRegistro_BE oCustomerRegister);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOnLineService/OperationalTracking", ReplyAction="http://tempuri.org/IOnLineService/OperationalTrackingResponse")]
        System.Data.DataSet OperationalTracking(int CustomerCode, string HouseBL);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOnLineService/OperationalTracking", ReplyAction="http://tempuri.org/IOnLineService/OperationalTrackingResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> OperationalTrackingAsync(int CustomerCode, string HouseBL);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOnLineService/CustomerStatementQuery", ReplyAction="http://tempuri.org/IOnLineService/CustomerStatementQueryResponse")]
        System.Data.DataTable CustomerStatementQuery(int CustomerCode, System.DateTime DateFrom, System.DateTime DateTo, string QueryType, string HouseBL);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOnLineService/CustomerStatementQuery", ReplyAction="http://tempuri.org/IOnLineService/CustomerStatementQueryResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> CustomerStatementQueryAsync(int CustomerCode, System.DateTime DateFrom, System.DateTime DateTo, string QueryType, string HouseBL);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOnLineService/InsertEntidadDireccionamiento", ReplyAction="http://tempuri.org/IOnLineService/InsertEntidadDireccionamientoResponse")]
        Delfin.Principal.OnLineService.EntidadDireccionamiento_BE InsertEntidadDireccionamiento(Delfin.Principal.OnLineService.EntidadDireccionamiento_BE oEntidadDireccionamiento);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOnLineService/InsertEntidadDireccionamiento", ReplyAction="http://tempuri.org/IOnLineService/InsertEntidadDireccionamientoResponse")]
        System.Threading.Tasks.Task<Delfin.Principal.OnLineService.EntidadDireccionamiento_BE> InsertEntidadDireccionamientoAsync(Delfin.Principal.OnLineService.EntidadDireccionamiento_BE oEntidadDireccionamiento);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOnLineService/UpdateEntidadDireccionamiento", ReplyAction="http://tempuri.org/IOnLineService/UpdateEntidadDireccionamientoResponse")]
        void UpdateEntidadDireccionamiento(Delfin.Principal.OnLineService.EntidadDireccionamiento_BE oEntidadDireccionamiento);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOnLineService/UpdateEntidadDireccionamiento", ReplyAction="http://tempuri.org/IOnLineService/UpdateEntidadDireccionamientoResponse")]
        System.Threading.Tasks.Task UpdateEntidadDireccionamientoAsync(Delfin.Principal.OnLineService.EntidadDireccionamiento_BE oEntidadDireccionamiento);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOnLineService/DeleteEntidadDireccionamiento", ReplyAction="http://tempuri.org/IOnLineService/DeleteEntidadDireccionamientoResponse")]
        void DeleteEntidadDireccionamiento(Delfin.Principal.OnLineService.EntidadDireccionamiento_BE oEntidadDireccionamiento);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOnLineService/DeleteEntidadDireccionamiento", ReplyAction="http://tempuri.org/IOnLineService/DeleteEntidadDireccionamientoResponse")]
        System.Threading.Tasks.Task DeleteEntidadDireccionamientoAsync(Delfin.Principal.OnLineService.EntidadDireccionamiento_BE oEntidadDireccionamiento);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOnLineService/ValidarDireccionamiento", ReplyAction="http://tempuri.org/IOnLineService/ValidarDireccionamientoResponse")]
        Delfin.Principal.OnLineService.EntidadDireccionamiento_BE ValidarDireccionamiento(Delfin.Principal.OnLineService.EntidadDireccionamiento_BE oEntidadDireccionamiento);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOnLineService/ValidarDireccionamiento", ReplyAction="http://tempuri.org/IOnLineService/ValidarDireccionamientoResponse")]
        System.Threading.Tasks.Task<Delfin.Principal.OnLineService.EntidadDireccionamiento_BE> ValidarDireccionamientoAsync(Delfin.Principal.OnLineService.EntidadDireccionamiento_BE oEntidadDireccionamiento);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOnLineService/GetByFilterEntidadDireccionamiento", ReplyAction="http://tempuri.org/IOnLineService/GetByFilterEntidadDireccionamientoResponse")]
        Delfin.Principal.OnLineService.EntidadDireccionamiento_BE[] GetByFilterEntidadDireccionamiento(Delfin.Principal.OnLineService.EntidadDireccionamiento_BE oEntidadDireccionamiento);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOnLineService/GetByFilterEntidadDireccionamiento", ReplyAction="http://tempuri.org/IOnLineService/GetByFilterEntidadDireccionamientoResponse")]
        System.Threading.Tasks.Task<Delfin.Principal.OnLineService.EntidadDireccionamiento_BE[]> GetByFilterEntidadDireccionamientoAsync(Delfin.Principal.OnLineService.EntidadDireccionamiento_BE oEntidadDireccionamiento);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOnLineService/GetAllDataTableEntidadDireccionamiento", ReplyAction="http://tempuri.org/IOnLineService/GetAllDataTableEntidadDireccionamientoResponse")]
        System.Data.DataTable GetAllDataTableEntidadDireccionamiento(Delfin.Principal.OnLineService.EntidadDireccionamiento_BE oEntidadDireccionamiento);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOnLineService/GetAllDataTableEntidadDireccionamiento", ReplyAction="http://tempuri.org/IOnLineService/GetAllDataTableEntidadDireccionamientoResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetAllDataTableEntidadDireccionamientoAsync(Delfin.Principal.OnLineService.EntidadDireccionamiento_BE oEntidadDireccionamiento);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOnLineService/GetAllEntidadDireccionamiento", ReplyAction="http://tempuri.org/IOnLineService/GetAllEntidadDireccionamientoResponse")]
        Delfin.Principal.OnLineService.EntidadDireccionamiento_BE GetAllEntidadDireccionamiento(Delfin.Principal.OnLineService.EntidadDireccionamiento_BE oEntidadDireccionamiento);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOnLineService/GetAllEntidadDireccionamiento", ReplyAction="http://tempuri.org/IOnLineService/GetAllEntidadDireccionamientoResponse")]
        System.Threading.Tasks.Task<Delfin.Principal.OnLineService.EntidadDireccionamiento_BE> GetAllEntidadDireccionamientoAsync(Delfin.Principal.OnLineService.EntidadDireccionamiento_BE oEntidadDireccionamiento);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IOnLineServiceChannel : Delfin.Principal.OnLineService.IOnLineService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class OnLineServiceClient : System.ServiceModel.ClientBase<Delfin.Principal.OnLineService.IOnLineService>, Delfin.Principal.OnLineService.IOnLineService {
        
        public OnLineServiceClient() {
        }
        
        public OnLineServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public OnLineServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public OnLineServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public OnLineServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetData(int value) {
            return base.Channel.GetData(value);
        }
        
        public System.Threading.Tasks.Task<string> GetDataAsync(int value) {
            return base.Channel.GetDataAsync(value);
        }
        
        public ApplicationForm.OnLineService.CompositeType GetDataUsingDataContract(ApplicationForm.OnLineService.CompositeType composite) {
            return base.Channel.GetDataUsingDataContract(composite);
        }
        
        public System.Threading.Tasks.Task<ApplicationForm.OnLineService.CompositeType> GetDataUsingDataContractAsync(ApplicationForm.OnLineService.CompositeType composite) {
            return base.Channel.GetDataUsingDataContractAsync(composite);
        }
        
        public System.Data.DataSet ExecuteSQL(string QueryString) {
            return base.Channel.ExecuteSQL(QueryString);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ExecuteSQLAsync(string QueryString) {
            return base.Channel.ExecuteSQLAsync(QueryString);
        }
        
        public object[] ExecuteSQLNonQuery(string QueryString) {
            return base.Channel.ExecuteSQLNonQuery(QueryString);
        }
        
        public System.Threading.Tasks.Task<object[]> ExecuteSQLNonQueryAsync(string QueryString) {
            return base.Channel.ExecuteSQLNonQueryAsync(QueryString);
        }
        
        public System.Data.DataTable VoyageQuery(int Days) {
            return base.Channel.VoyageQuery(Days);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> VoyageQueryAsync(int Days) {
            return base.Channel.VoyageQueryAsync(Days);
        }
        
        public ApplicationForm.OnLineService.VoyageQueryDTO[] VoyageQueryList() {
            return base.Channel.VoyageQueryList();
        }
        
        public System.Threading.Tasks.Task<ApplicationForm.OnLineService.VoyageQueryDTO[]> VoyageQueryListAsync() {
            return base.Channel.VoyageQueryListAsync();
        }
        
        public System.Data.DataTable InvoicingQuery(int CustomerCode, System.DateTime DateFrom, System.DateTime DateTo) {
            return base.Channel.InvoicingQuery(CustomerCode, DateFrom, DateTo);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> InvoicingQueryAsync(int CustomerCode, System.DateTime DateFrom, System.DateTime DateTo) {
            return base.Channel.InvoicingQueryAsync(CustomerCode, DateFrom, DateTo);
        }
        
        public System.Data.DataSet CargoNoticeQuery(string HouseBL) {
            return base.Channel.CargoNoticeQuery(HouseBL);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> CargoNoticeQueryAsync(string HouseBL) {
            return base.Channel.CargoNoticeQueryAsync(HouseBL);
        }
        
        public System.Data.DataTable GetVoyageByCustomer(int CustomerCode) {
            return base.Channel.GetVoyageByCustomer(CustomerCode);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetVoyageByCustomerAsync(int CustomerCode) {
            return base.Channel.GetVoyageByCustomerAsync(CustomerCode);
        }
        
        public System.Data.DataTable CargoAddressingQuery(int CustomerCode, int Voyage, string HouseBL) {
            return base.Channel.CargoAddressingQuery(CustomerCode, Voyage, HouseBL);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> CargoAddressingQueryAsync(int CustomerCode, int Voyage, string HouseBL) {
            return base.Channel.CargoAddressingQueryAsync(CustomerCode, Voyage, HouseBL);
        }
        
        public System.Data.DataTable CustomerDocumentQuery(string DocumentType, string DocumentNUmber) {
            return base.Channel.CustomerDocumentQuery(DocumentType, DocumentNUmber);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> CustomerDocumentQueryAsync(string DocumentType, string DocumentNUmber) {
            return base.Channel.CustomerDocumentQueryAsync(DocumentType, DocumentNUmber);
        }
        
        public System.Data.DataTable CustomerDebtQuery(int CustomerCode, string HouseBL) {
            return base.Channel.CustomerDebtQuery(CustomerCode, HouseBL);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> CustomerDebtQueryAsync(int CustomerCode, string HouseBL) {
            return base.Channel.CustomerDebtQueryAsync(CustomerCode, HouseBL);
        }
        
        public System.Data.DataTable HBLStatusQuery(string HouseBL, int CustomerCode) {
            return base.Channel.HBLStatusQuery(HouseBL, CustomerCode);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> HBLStatusQueryAsync(string HouseBL, int CustomerCode) {
            return base.Channel.HBLStatusQueryAsync(HouseBL, CustomerCode);
        }
        
        public System.Data.DataTable RelatedCompanyQuery(int CompanyCode) {
            return base.Channel.RelatedCompanyQuery(CompanyCode);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> RelatedCompanyQueryAsync(int CompanyCode) {
            return base.Channel.RelatedCompanyQueryAsync(CompanyCode);
        }
        
        public void InsertRelatedCompany(ApplicationForm.OnLineService.EntidadVinculada_BE oRelatedCompany) {
            base.Channel.InsertRelatedCompany(oRelatedCompany);
        }
        
        public System.Threading.Tasks.Task InsertRelatedCompanyAsync(ApplicationForm.OnLineService.EntidadVinculada_BE oRelatedCompany) {
            return base.Channel.InsertRelatedCompanyAsync(oRelatedCompany);
        }
        
        public void UpdateRelatedCompany(ApplicationForm.OnLineService.EntidadVinculada_BE oRelatedCompany) {
            base.Channel.UpdateRelatedCompany(oRelatedCompany);
        }
        
        public System.Threading.Tasks.Task UpdateRelatedCompanyAsync(ApplicationForm.OnLineService.EntidadVinculada_BE oRelatedCompany) {
            return base.Channel.UpdateRelatedCompanyAsync(oRelatedCompany);
        }
        
        public void StatusUpdateRelatedCompany(ApplicationForm.OnLineService.EntidadVinculada_BE oRelatedCompany) {
            base.Channel.StatusUpdateRelatedCompany(oRelatedCompany);
        }
        
        public System.Threading.Tasks.Task StatusUpdateRelatedCompanyAsync(ApplicationForm.OnLineService.EntidadVinculada_BE oRelatedCompany) {
            return base.Channel.StatusUpdateRelatedCompanyAsync(oRelatedCompany);
        }
        
        public void DeleteRelatedCompany(ApplicationForm.OnLineService.EntidadVinculada_BE oRelatedCompany) {
            base.Channel.DeleteRelatedCompany(oRelatedCompany);
        }
        
        public System.Threading.Tasks.Task DeleteRelatedCompanyAsync(ApplicationForm.OnLineService.EntidadVinculada_BE oRelatedCompany) {
            return base.Channel.DeleteRelatedCompanyAsync(oRelatedCompany);
        }
        
        public ApplicationForm.OnLineService.EntidadVinculada_BE GetAllRelatedCompany(ApplicationForm.OnLineService.EntidadVinculada_BE oRelatedCompany) {
            return base.Channel.GetAllRelatedCompany(oRelatedCompany);
        }
        
        public System.Threading.Tasks.Task<ApplicationForm.OnLineService.EntidadVinculada_BE> GetAllRelatedCompanyAsync(ApplicationForm.OnLineService.EntidadVinculada_BE oRelatedCompany) {
            return base.Channel.GetAllRelatedCompanyAsync(oRelatedCompany);
        }
        
        public System.Data.DataTable GetAllDataTableRelatedCompany(ApplicationForm.OnLineService.EntidadVinculada_BE oRelatedCompany) {
            return base.Channel.GetAllDataTableRelatedCompany(oRelatedCompany);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetAllDataTableRelatedCompanyAsync(ApplicationForm.OnLineService.EntidadVinculada_BE oRelatedCompany) {
            return base.Channel.GetAllDataTableRelatedCompanyAsync(oRelatedCompany);
        }
        
        public System.Data.DataTable GetDataList(string TableName, object[] Params) {
            return base.Channel.GetDataList(TableName, Params);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetDataListAsync(string TableName, object[] Params) {
            return base.Channel.GetDataListAsync(TableName, Params);
        }
        
        public System.Data.DataTable GetRelatedCompany(string DocumentNumber) {
            return base.Channel.GetRelatedCompany(DocumentNumber);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetRelatedCompanyAsync(string DocumentNumber) {
            return base.Channel.GetRelatedCompanyAsync(DocumentNumber);
        }
        
        public System.Data.DataSet GetDataByEntityType(int EntityType, string DocumentNumber) {
            return base.Channel.GetDataByEntityType(EntityType, DocumentNumber);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetDataByEntityTypeAsync(int EntityType, string DocumentNumber) {
            return base.Channel.GetDataByEntityTypeAsync(EntityType, DocumentNumber);
        }
        
        public void InsertCustomerRegister(ApplicationForm.OnLineService.EntidadRegistro_BE oCustomerRegister) {
            base.Channel.InsertCustomerRegister(oCustomerRegister);
        }
        
        public System.Threading.Tasks.Task InsertCustomerRegisterAsync(ApplicationForm.OnLineService.EntidadRegistro_BE oCustomerRegister) {
            return base.Channel.InsertCustomerRegisterAsync(oCustomerRegister);
        }
        
        public void StatusUpdateCustomerRegister(ApplicationForm.OnLineService.EntidadRegistro_BE oCustomerRegister) {
            base.Channel.StatusUpdateCustomerRegister(oCustomerRegister);
        }
        
        public System.Threading.Tasks.Task StatusUpdateCustomerRegisterAsync(ApplicationForm.OnLineService.EntidadRegistro_BE oCustomerRegister) {
            return base.Channel.StatusUpdateCustomerRegisterAsync(oCustomerRegister);
        }
        
        public System.Data.DataTable GetAllDataTableCustomerRegister(ApplicationForm.OnLineService.EntidadRegistro_BE oCustomerRegister) {
            return base.Channel.GetAllDataTableCustomerRegister(oCustomerRegister);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetAllDataTableCustomerRegisterAsync(ApplicationForm.OnLineService.EntidadRegistro_BE oCustomerRegister) {
            return base.Channel.GetAllDataTableCustomerRegisterAsync(oCustomerRegister);
        }
        
        public System.Data.DataSet OperationalTracking(int CustomerCode, string HouseBL) {
            return base.Channel.OperationalTracking(CustomerCode, HouseBL);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> OperationalTrackingAsync(int CustomerCode, string HouseBL) {
            return base.Channel.OperationalTrackingAsync(CustomerCode, HouseBL);
        }
        
        public System.Data.DataTable CustomerStatementQuery(int CustomerCode, System.DateTime DateFrom, System.DateTime DateTo, string QueryType, string HouseBL) {
            return base.Channel.CustomerStatementQuery(CustomerCode, DateFrom, DateTo, QueryType, HouseBL);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> CustomerStatementQueryAsync(int CustomerCode, System.DateTime DateFrom, System.DateTime DateTo, string QueryType, string HouseBL) {
            return base.Channel.CustomerStatementQueryAsync(CustomerCode, DateFrom, DateTo, QueryType, HouseBL);
        }
        
        public Delfin.Principal.OnLineService.EntidadDireccionamiento_BE InsertEntidadDireccionamiento(Delfin.Principal.OnLineService.EntidadDireccionamiento_BE oEntidadDireccionamiento) {
            return base.Channel.InsertEntidadDireccionamiento(oEntidadDireccionamiento);
        }
        
        public System.Threading.Tasks.Task<Delfin.Principal.OnLineService.EntidadDireccionamiento_BE> InsertEntidadDireccionamientoAsync(Delfin.Principal.OnLineService.EntidadDireccionamiento_BE oEntidadDireccionamiento) {
            return base.Channel.InsertEntidadDireccionamientoAsync(oEntidadDireccionamiento);
        }
        
        public void UpdateEntidadDireccionamiento(Delfin.Principal.OnLineService.EntidadDireccionamiento_BE oEntidadDireccionamiento) {
            base.Channel.UpdateEntidadDireccionamiento(oEntidadDireccionamiento);
        }
        
        public System.Threading.Tasks.Task UpdateEntidadDireccionamientoAsync(Delfin.Principal.OnLineService.EntidadDireccionamiento_BE oEntidadDireccionamiento) {
            return base.Channel.UpdateEntidadDireccionamientoAsync(oEntidadDireccionamiento);
        }
        
        public void DeleteEntidadDireccionamiento(Delfin.Principal.OnLineService.EntidadDireccionamiento_BE oEntidadDireccionamiento) {
            base.Channel.DeleteEntidadDireccionamiento(oEntidadDireccionamiento);
        }
        
        public System.Threading.Tasks.Task DeleteEntidadDireccionamientoAsync(Delfin.Principal.OnLineService.EntidadDireccionamiento_BE oEntidadDireccionamiento) {
            return base.Channel.DeleteEntidadDireccionamientoAsync(oEntidadDireccionamiento);
        }
        
        public Delfin.Principal.OnLineService.EntidadDireccionamiento_BE ValidarDireccionamiento(Delfin.Principal.OnLineService.EntidadDireccionamiento_BE oEntidadDireccionamiento) {
            return base.Channel.ValidarDireccionamiento(oEntidadDireccionamiento);
        }
        
        public System.Threading.Tasks.Task<Delfin.Principal.OnLineService.EntidadDireccionamiento_BE> ValidarDireccionamientoAsync(Delfin.Principal.OnLineService.EntidadDireccionamiento_BE oEntidadDireccionamiento) {
            return base.Channel.ValidarDireccionamientoAsync(oEntidadDireccionamiento);
        }
        
        public Delfin.Principal.OnLineService.EntidadDireccionamiento_BE[] GetByFilterEntidadDireccionamiento(Delfin.Principal.OnLineService.EntidadDireccionamiento_BE oEntidadDireccionamiento) {
            return base.Channel.GetByFilterEntidadDireccionamiento(oEntidadDireccionamiento);
        }
        
        public System.Threading.Tasks.Task<Delfin.Principal.OnLineService.EntidadDireccionamiento_BE[]> GetByFilterEntidadDireccionamientoAsync(Delfin.Principal.OnLineService.EntidadDireccionamiento_BE oEntidadDireccionamiento) {
            return base.Channel.GetByFilterEntidadDireccionamientoAsync(oEntidadDireccionamiento);
        }
        
        public System.Data.DataTable GetAllDataTableEntidadDireccionamiento(Delfin.Principal.OnLineService.EntidadDireccionamiento_BE oEntidadDireccionamiento) {
            return base.Channel.GetAllDataTableEntidadDireccionamiento(oEntidadDireccionamiento);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetAllDataTableEntidadDireccionamientoAsync(Delfin.Principal.OnLineService.EntidadDireccionamiento_BE oEntidadDireccionamiento) {
            return base.Channel.GetAllDataTableEntidadDireccionamientoAsync(oEntidadDireccionamiento);
        }
        
        public Delfin.Principal.OnLineService.EntidadDireccionamiento_BE GetAllEntidadDireccionamiento(Delfin.Principal.OnLineService.EntidadDireccionamiento_BE oEntidadDireccionamiento) {
            return base.Channel.GetAllEntidadDireccionamiento(oEntidadDireccionamiento);
        }
        
        public System.Threading.Tasks.Task<Delfin.Principal.OnLineService.EntidadDireccionamiento_BE> GetAllEntidadDireccionamientoAsync(Delfin.Principal.OnLineService.EntidadDireccionamiento_BE oEntidadDireccionamiento) {
            return base.Channel.GetAllEntidadDireccionamientoAsync(oEntidadDireccionamiento);
        }
    }
}
